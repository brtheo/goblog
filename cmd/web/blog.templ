package web

import (
  "github.com/brtheo/goblog/internal/octogo"
	"time"
	"strings"
  "fmt"
)

func makeURL(url string) templ.SafeURL {
  return templ.SafeURL("/blog/"+url)
}
func makeDate(timestamp int) string {
  return time.Unix(int64(timestamp),0).UTC().Format(time.DateOnly)
}

templ BlogHomePage(posts []*octogo.Post ) {
	@Layout() {
		for _, post := range posts {
      @BlogPost(post, true)
    }
	}
}

templ BlogPostPage(post *octogo.Post, comment octogo.Pair[[]*octogo.CommentResponse, string]) {
  @Layout() {
    @BlogPost(post, false)
    @CommentForm(comment)
  }
}

templ Tag(tags []string) {
  for _, tag := range tags {
    <li ><a class="card">{tag}</a></li>
  }
}

templ CommentForm(comment octogo.Pair[[]*octogo.CommentResponse, string]) {
  <section class="scale-in" style="display: flex; flex-direction: column;gap: var(--gap-xl)">
    <form hx-post="/blog/comment" method="POST" hx-swap="afterend transition:true" action="/blog/comment" style="flex-direction: column"post class="card">
        <input
          post
          required
          type="text"
          name="author"
          placeholder="Your name..."
          class="card"
          style="width: 100%; font-size: 1rem; font-family: 'Ellograph CF'"
          />
          <input
            post
            required
            type="text"
            name="body"
            placeholder="Your comment..."
            style="width: 100%; font-size: 1rem; font-family: 'Ellograph CF'"
            class="card"
          />
        <button style="width:min-content; font-size: 1rem; font-family: 'Ellograph CF';" post type="submit" name="sha" class="card" value={comment.Two}>Comment</button>
      </form>
    for _, com := range comment.One {
      @Comment(*com)
    }
  </section>
}

templ Comment(comment octogo.CommentResponse) {
  <article post class="card">
    {makeDate(comment.PublishedAt)}
    {comment.Author}
    @templ.Raw(comment.Content)
  </article>
}
func viewName(prefix, name string) templ.SafeCSS {
  name = strings.ReplaceAll(name, ".","_")
  name = strings.ReplaceAll(name, ":","_")
  return templ.SafeCSS(fmt.Sprintf("view-transition-name: %s-%s",prefix, name))
}


templ BlogPost(post *octogo.Post, home bool) {
  <article hx-boost="true" class="card"
    if !home {
      post
    }
  >
    <h1 id={strings.ToLower(post.Slug)} style={viewName("title", strings.ToLower(post.Slug))}>{post.Title}</h1>
    if home {
      <span>{makeDate(post.PublishedAt)}</span>
      <ul>@Tag(post.Tags)</ul>
      <a class="card" href={makeURL(post.Slug)} hx-swap="innerHTML transition:true">Read</a>
    } else {
      @templ.Raw(post.Content)
    }
  </article>
  if !home {
    <table-content class="card"></table-content>
  }
}
