// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.833
package web

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func HomePage() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<style>\n      :is(.slf, .react, .go, .ts):hover {\n        & img {\n          top: -30px !important;\n        }\n      }\n      .badges > article {\n        --delay: .2s;\n        \n      }\n      @container main-container (width < 1080px) {\n        [tools] {\n          grid-column: 1 / span 2;\n        }\n        .badges {\n          align-items: flex-start;\n          flex-flow: row wrap;\n          grid-column: 1 / span 2;\n          justify-content: space-evenly;\n          & img { width: 135px !important;}\n        }\n      }\n      main:has( .slf:hover ) .badges, \n      main:has( .slf:hover ) .badges article {\n        transition: opacity 200ms linear, scale 530ms cubic-bezier(.47,1.64,.41,.8);\n        opacity: 1 !important;\n        scale: 1 !important;\n          &:nth-child(1) { transition-delay: calc(var(--delay) * 1); }\n          &:nth-child(2) { transition-delay: calc(var(--delay) * 2); }\n          &:nth-child(3) { transition-delay: calc(var(--delay) * 3); }\n          &:nth-child(4) { transition-delay: calc(var(--delay) * 4); }\n          &:nth-child(5) { transition-delay: calc(var(--delay) * 5); }\n      }\n    </style> <h1 style=\"font-size: 2.5rem; line-height: 4rem; margin-top: 7rem; color: var(--clr); grid-column: span 2;\">I'm Theo Brossier <br>Full Stack lead engineer <br>Currently working at Capgemini ♠️ <br>Living in Nantes, France</h1><article tools class=\"card\"><h2 style=\"grid-column: span 2\">Tools in my belt includes :</h2><ul style=\"gap: var(--gap)\"><li class=\"card ts\" style=\"background-color: #3178c6;cursor: pointer; color: var(--black); position: relative; overflow: hidden; --del: 460ms\">TypeScript</li><li class=\"card wc\">WebComponent</li><li class=\"card react\" style=\"background-color: #00d8ff;cursor: pointer; color: var(--black); position: relative; overflow: hidden;--del: 320ms\">React <img style=\"width: 32%;position: absolute; top: -9px; left: 0px;transition: top 200ms ease-in;\" src=\"/static/img/react.png\"></li><li class=\"card htmx\">HTMX</li><li class=\"card go\" style=\"background-color: #29beb0;cursor: pointer; color: var(--black); position: relative; overflow: hidden;--del: 260ms\">GO <img style=\"width: 54%;position: absolute; top: -9px; right: 0px;transition: top 200ms ease-in;\" src=\"/static/img/gopher.png\"></li><li class=\"card slf\" style=\"background-color: #21A0DF;cursor: pointer; color: var(--black); position: relative; overflow: hidden;--del: 190ms\">Salesforce <img style=\"width: 32%;position: absolute; top: -9px; left: 0px;transition: top 200ms ease-in;\" src=\"/static/img/astro.png\"></li></ul></article>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = badges().Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = Layout().Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var names = [5]string{"administrator", "developer1", "developer2", "expcons", "javascript"}

func badges() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var3 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var3 == nil {
			templ_7745c5c3_Var3 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<section class=\"badges\" style=\"display: flex; gap: var(--gap); opacity: 0; transition: opacity 200ms linear\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for _, badge := range names {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "<article class=\"card\" style=\"opacity: 0; scale: 0; width: max-content; height: max-content;grid-template-columns: 1fr; place-content: center;\"><img style=\"width:175px; margin: 0;\" src=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var4 string
			templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs("/static/img/badges/" + badge + ".png")
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `cmd/web/home.templ`, Line: 81, Col: 84}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "\"></article>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "</section>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
